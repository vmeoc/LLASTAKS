apiVersion: apps/v1
kind: Deployment
metadata:
  name: faiss-wrap
  namespace: llasta
  labels:
    app: faiss-wrap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: faiss-wrap
  template:
    metadata:
      labels:
        app: faiss-wrap
      annotations:
        k8s.grafana.com/scrape: "true"
        k8s.grafana.com/metrics.portNumber: "9000"
        k8s.grafana.com/metrics.path: "/metrics"
    spec:
      # ce pod va sur le n≈ìud CPU (car il n'a pas de toleration pour le GPU)
      containers:
        - name: faiss-wrap
          image: 142473567252.dkr.ecr.us-east-1.amazonaws.com/dockerhub/vmeoc/faiss-wrap:v3.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          env:
            - name: DATA_DIR
              value: /data
            - name: HF_HOME
              value: /models/hub
            - name: EMBED_MODEL
              value: BAAI/bge-m3
          volumeMounts:
            - name: faiss-data
              mountPath: /data
            - name: bge-models
              mountPath: /models/hub
          resources:
            requests:
              cpu: "200m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          readinessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 20
            periodSeconds: 20
      volumes:
        - name: faiss-data
          persistentVolumeClaim:
            claimName: llasta-faiss-data-pvc
        - name: bge-models
          persistentVolumeClaim:
            claimName: llasta-bge-models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: faiss-wrap
  namespace: llasta
  labels:
    app: faiss-wrap
spec:
  type: ClusterIP
  selector:
    app: faiss-wrap
  ports:
    - name: http
      port: 9000
      targetPort: 9000
